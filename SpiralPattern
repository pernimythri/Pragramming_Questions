N = 6
1       2      3      4      5      6
20     21     22     23      24     7
19     32     33     34     25      8
18     31     36     35     26      9
17     30     29     28     27     10
16     15     14     13     12     11


public class SpiralPattern {
    public static void main(String[] args) {
        int n = 6;
        int[][] matrix = new int[n][n];

        int top = 0, bottom = n - 1;
        int left = 0, right = n - 1;
        int num = 1;

        while (top <= bottom && left <= right) {
            // Top row (left to right)
            for (int i = left; i <= right; i++) {
                matrix[top][i] = num++;
            }
            top++;

            // Right column (top to bottom)
            for (int i = top; i <= bottom; i++) {
                matrix[i][right] = num++;
            }
            right--;

            // Bottom row (right to left)
            for (int i = right; i >= left; i--) {
                matrix[bottom][i] = num++;
            }
            bottom--;

            // Left column (bottom to top)
            for (int i = bottom; i >= top; i--) {
                matrix[i][left] = num++;
            }
            left++;
        }

        // Print the matrix
        for (int[] row : matrix) {
            for (int val : row) {
                System.out.printf("%-5d", val);
            }
            System.out.println();
        }
    }
}
